services:
  traefik:
    image: "traefik:latest"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.local.sowt.ca`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.file.filename=/etc/traefik/dynamic.yml"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=strevor1999@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - target: 8080
        published: 8080
        mode: host
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      #- "./letsencrypt:/letsencrypt"
      #- "./dynamic.yml:/etc/traefik/dynamic.yml"  # Mount dynamic configuration
    dns:
      #- 10.0.0.141 # Use local DNS server
      - 8.8.8.8  # Use Cloudflare's DNS server (optional)

  whoami:
    image: "traefik/whoami"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.sowt.ca`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver=myresolver"

networks:
  traefik_net:
    external: true
